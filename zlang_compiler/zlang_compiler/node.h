
#pragma once

enum LangCommands
{
	TAB = 0,
	OP_INC,
	OP_DEC,
	OP_EQUAL,
	ACCESS_ARRAY_ELEMENT,
	OP_PLUS, 			// 5
	OP_MINUS,
	CMP_EQUAL,
	CMP_NOT_EQUAL,
	CMP_LESS,
	OP_OR, 				// 10
	OP_WHILE,
	OP_IF,
	OP_FOR,
	CMP_COMPLEX,
	OP_COMMA, 			// 15
	FUNC_DECL,
	FUNC_PARAMS,
	OP_RETURN,
	VALUE_TRUE,
	VALUE_FALSE, 			// 20
	OP_MULTIPLY,
	OP_DIVISION,
	OP_BRACKETS,
	OP_PLUS_EQUAL,
	OP_MINUS_EQUAL, 		// 25
	OP_MULTIPLY_EQUAL,
	OP_DIVISION_EQUAL,
	OP_CHANGE_VALUE,
	CMP_MORE,
	OP_AND, 			// 30
	CMP_LESS_EQUAL,
	CMP_MORE_EQUAL,
	OP_FUNCTION_CALL,
	OP_FUNCTION_CALL_PARAMS,
	VALUE_NULL, 			// 35
	CLASS_TYPE_SINGLETON_DECL,
	SECTION_PRIVATE_DECL,
	SECTION_PUBLIC_DECL,
	TAB3,
	OP_DOT, 			// 40
	DECL_CLASS_WITH_TYPE,
	DECL_CLASS,
	DECL_CLASS_CONTENTS,
	OP_NEWLINE, 			// 44
	CLASS_PROPERTY_DECL,
	OP_METHOD_CALL,
	OP_MY_PROP,
	OP_PROP,
	OP_CONCAT, 			// 49
	OP_PROP_METHOD_CALL,
	DECL_CLASS_NAME,
	OP_BASE_METHOD_CALL,
	PROP_IN_CALL,
	OUT_PARAM,
	OP_FUNCTION_ALL_CALL_PARAMS,	// 55
	OP_SINGLELINE_COMMENT,
	OP_MULTILINE_COMMENT,
	OP_ELSE,			
	OP_FOREACH,
	OP_CPP,				// 60
	OP_IMPORT_UNIX,
	OP_IMPORT_WINDOWS,
	OP_IMPORT_LINUX,
	OP_IMPORT_MACOSX,
	OP_INCLUDE,			// 65
	OP_INCLUDE_UNIX,
	OP_INCLUDE_LINUX,
	OP_INCLUDE_WINDOWS,
	OP_INCLUDE_MACOSX,
	OP_IMPORT_UNIX_PATH,		// 70
	OP_IMPORT_WINDOWS_PATH,
	OP_IMPORT_LINUX_PATH,
	OP_IMPORT_MACOSX_PATH,
	OP_INCLUDE_UNIX_PATH,   
	OP_INCLUDE_WINDOWS_PATH, 	// 75
	OP_INCLUDE_LINUX_PATH,   
	OP_INCLUDE_MACOSX_PATH,
	OP_ADD_CPP,
	OP_BREAK,
	OP_CONTINUE,			// 80
	OP_SHORT_IF,
	OP_PARAM_ANNOTATION,
	OP_PARAM_ANNOTATION_PROP,
	OP_PARAM_ANNOTATION_PROP_VALUE,
	INHERITANCE_PRIVATE,		// 85
	INHERITANCE_PUBLIC,
	OP_CPP_DECL,
	GLOBAL_FUNC_DECL,
	OP_RETURN_PROPS,
	OP_FUNC_PROP,			// 90
	FUNC_RESULT_OBJECT,
	OP_METHOD_PROP,
	OP_INCLUDE_PATH,
	OP_COMPILER_FLAGS_MACOSX,
	OP_COMPILER_FLAGS_LINUX,	// 95
	OP_COMPILER_FLAGS_UNIX,
	OP_CPP_ENTRY_POINT,
	OP_CONSTRUCTOR,
	OP_CONSTRUCTOR_PARAMS,
	OP_CONSTRUCTOR_PARAMETER,	// 100
	OP_BASE_PROP,
	OP_XOR,
	OP_AND_EQUAL,
	OP_OR_EQUAL,
	OP_XOR_EQUAL,			// 105
	OP_MATH_AND,
	OP_MATH_OR,
	OP_MATH_XOR,
	OP_UNARY_MINUS,
	OP_FLOAT_DECL,			// 110
	OP_FIXED_DECL
};

#include <stdio.h>
#include <string.h>

typedef struct node
{
	struct node *left;
	struct node *right;
	struct node *center;
	char *token;
	struct node *nodeval;
	int tabLevel;
	int cmd;
	int processed;	
	unsigned int line;
} node;

extern node* root;
