1.000000
++ => integer [1]
-- => integer [-1]
+= => integer [2]
*= => integer [0]
/= => integer [0]
-= => integer [-2]
^= => integer [101]
|= => integer [101]
&= => integer [101]
int + 1 => integer [3]
int * 2 => integer [4]
int / 2 => integer [1]
int - 9 => integer [-7]
[] => array [[1]]
push => array [[1]]
removeAll => array [[]]
resize => array [[0,0]]
implode => string []
paste => array [["a"]]
extractNumeric => array [[]]
extractFloat => array [[]]
extractBoolean => array [[]]
extractString => array [[]]
binarizeNumeric => array [[0,0,0,0]]
binarizeFloat => array [[0,0,0,0]]
binarizeBoolean => array [[0]]
binarizeString => array [[97,98,99,100]]
cut => array [[]]
remove => array [[]]
indexOf => array [[]]
indexFirstOf => array [[]]
indexLastOf => array [[]]
[nop] => unknown [{}]
.x => class [{"x":1}]
.length => class [{"length":""}]
convertable => class [{}]
clone => class [{}]
{}print => class [{}]
{}
println => class [{}]
convertable if => class [{}]
checkedif => class [{}]
["hello"] => hashtable [{"hello":"world"}]
keyExists => hashtable [{}]
removeKey => hashtable [{}]
getValues => hashtable [{}]
getKeys => hashtable [{}]
clear => hashtable [{}]
.= => string [end]
+= => string [end]
trim => string []
ltrim => string []
rtrim => string []
replace => string []
explode => string []
substr => string []
regexMatch => string []
regexSearch => string []
regexReplace => string []
regexMatch+ => string []
regexSearch+ => string []
regexReplace+ => string []
erase => string []
insert => string [a]
find => string []
findFirstOf => string []
findFirstOf => string []
findLastOf => string []
findLastOf => string []
^= => boolean [false]
|= => boolean [false]
&= => boolean [false]
^= => boolean [false]
^= => boolean [false]
|= => boolean [true]
&= => boolean [false]
+= => double [2.100000]
*= => double [0.000000]
/= => double [0.000000]
-= => double [-2.100000]
int + 1 => double [3.100000]
int * 2 => double [4.200000]
int / 2 => double [1.050000]
int - 9 => double [-6.900000]
int + 1.0 => double [3.000000]
int * 2.0 => double [4.000000]
int / 2.0 => double [1.000000]
int - 9.0 => double [-7.000000]
+= => symbol [a]
*= => symbol []
/= => symbol []
-= => symbol [Ÿ]
^= => symbol [a]
|= => symbol [a]
&= => symbol [a]
+= => arbitrary precision float [2.21212121213434343434565656565656000000398464791646447075336348076494826850657885418394155152554958476684987545013427734375000000]
-= => arbitrary precision float [-2.21212121213434343434565656565656000000398464791646447075336348076494826850657885418394155152554958476684987545013427734375000000]
/= => arbitrary precision float [0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
*= => arbitrary precision float [0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
Abs => double [0.000000]
Sin => double [0.000000]
Cos => double [0.000000]
Tan => double [0.000000]
Pow => double [0.000000]
Pow => double [0.000000]
Exp => double [0.000000]
Sqrt => double [0.000000]
Asin => double [0.000000]
Acos => double [0.000000]
Atan => double [0.000000]
Actg => double [0.000000]
Round => double [0.000000]
Truncate => double [0.000000]
Ceil => double [0.000000]
Floor => double [0.000000]
Fraction => double [0.000000]
